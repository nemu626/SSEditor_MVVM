<Controls:MetroWindow x:Class="SSEditor.MainWindow"
        DataContext="{Binding Main, Source={StaticResource Locator}}"
        FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:local="clr-namespace:SSEditor"
        xmlns:behaviors="clr-namespace:SSEditor.View.Behavior"

        mc:Ignorable="d"
        Title="{Binding Project.title}" 
        Height="{Binding AppOption.Window_Heigth}" Width="{Binding AppOption.Window_Width}"
        Name="mainWindow">

    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="Background" Value="Black"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
        </Style>
    </Window.Style>

    <DockPanel Margin="0,0,0.334,-0.333">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="ファイル(_F)">
                <MenuItem x:Name="NewMenu" Header="新規(N)" ToolTip="新しいファイルを作成します。" InputGestureText="CTRL+N" Click="MenuHandler_Click"></MenuItem>
                <MenuItem x:Name="OpenMenu" Header="開く(O)" ToolTip="Opens a new file" InputGestureText="CTRL+O" Click="MenuHandler_Click"></MenuItem>
                <MenuItem x:Name="SaveMenu" Header="保存(S)" ToolTip="Saves the current file" InputGestureText="CTRL+S" Click="MenuHandler_Click"/>
                <MenuItem x:Name="SaveAsMenu" Header="名前を付けて保存" ToolTip="Saves the current file" Click="MenuHandler_Click"/>
                <MenuItem x:Name="ExportTextMenu" Header="テキストファイルにエクスポート" ToolTip="Export to Text file" Click="MenuHandler_Click"/>
                <Separator/>
                <MenuItem x:Name="ExitMenu" Header="終了" ToolTip="Exits the program" Click="MenuHandler_Click"/>
            </MenuItem>

            <MenuItem Header="編集(_E)">
            </MenuItem>
            <MenuItem Header="オプション(_O)">
                <MenuItem x:Name="SetParenMenu" Header="括弧の設定" ToolTip="Option for Paren" Click="MenuHandler_Click"></MenuItem>
                <MenuItem x:Name="SetDisplaySpeaker" Header="プレーンエディタに登場人物名を表記する" IsCheckable="True" IsChecked="{Binding Project.displaySpeakerFlag}"></MenuItem>
            </MenuItem>
        </Menu>


        <Grid DockPanel.Dock="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="3*"/>

            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="8*"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>

            <Border BorderBrush="#3B4A51"  BorderThickness="3" Grid.Column="0" Grid.RowSpan="2" >
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="1*"/>
                        <RowDefinition Height="10*"/>
                    </Grid.RowDefinitions>

                    <TextBlock Text="登場人物" FontSize="22" 
                               Background="{Binding AppOption.UI_BackGroundHex}" Foreground="{Binding AppOption.UI_ForeGroundHex}" 
                               Grid.Row="0" FontWeight="Bold" TextAlignment="Center" LineHeight="22" VerticalAlignment="Center">
                    </TextBlock>
                    <Button Name="newPerson" Content="登場人物を追加"  Click="AddPersoNclicked"  Grid.Row="1"></Button>
                    <!--<Button Name="ModifyPerson" Content="人物情報を修正" Grid.Row="2"></Button>-->
                    <Button Name="deletePerson" Content="選択した人物を削除" Grid.Row="3"
                            Command="{Binding DeletePersonCom}">
                        <i:Interaction.Behaviors>
                            <behaviors:MessageOKCancelBehavior Message="この人物と発言が全て削除されます。\r\n よろしいですか？">
                            </behaviors:MessageOKCancelBehavior>
                        </i:Interaction.Behaviors>
                    </Button>

                    <ListBox Name="treeView" ItemsSource="{Binding Project.people}" 
                               Background="{Binding AppOption.PlainEditor_Font_BackGroundHex}" Grid.Row="4"
                              SelectedItem="{Binding AppContext.SelectedPerson}">
                        <ListBox.ItemTemplate>
                            <DataTemplate  DataType="local:Person">
                                <DockPanel MouseLeftButtonUp="MouseButtonFocus2InputTextBox">
                                <TextBlock Text="{Binding name, Mode=TwoWay}" DockPanel.Dock="Left"  
                                           Foreground="{Binding font.Color.Brush}"
                                           FontSize="12">
                                </TextBlock>
                                <TextBlock Text="{Binding hotkey.Key2String}" DockPanel.Dock="Right"
                                           Foreground="{Binding font.Color.Brush}"
                                           FontSize="8"/>
                                </DockPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </Grid>
            </Border>

            <ScrollViewer Name="HukidashiScroll" Grid.Column="1">
                <i:Interaction.Behaviors>
                    <behaviors:AutoScrollBehavior />
                </i:Interaction.Behaviors>
                <ListBox Background="{Binding AppOption.BlocksEditor_BackGroundHex}"   
                         Name="TextLineBlocks" ItemsSource="{Binding Project.lines}"  VerticalAlignment="Top"
                         SelectedItem="{Binding AppContext.SelectedLine, Mode=Twoway}"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListBox.ContextMenu>
                        <ContextMenu >
                            <MenuItem Header="この行を修正" Command="{Binding SetModifyModeCom}"></MenuItem>
                            <MenuItem Header="この行を削除" Command="{Binding DeleteLineCom}">
                            </MenuItem>
                            <MenuItem Header="この行の後ろに行を追加(割り込み)" Command="{Binding SetInterpolateModeCom}"></MenuItem>
                        </ContextMenu>
                    </ListBox.ContextMenu>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <ContentControl>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}}, 
                                            Path=DataContext.SetModifyModeCom}"></i:InvokeCommandAction>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Grid Name="HukidasiGrid" Margin="5,5,5,5">

                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="80"></ColumnDefinition>
                                        <ColumnDefinition></ColumnDefinition>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Foreground="White" Text="{Binding speaker.name}" 
                                           VerticalAlignment="Bottom" TextWrapping="Wrap" ></TextBlock>
                                    <Border Name="BlockEditor_HukidasiBorder" Grid.Column="1" 
                                        DockPanel.Dock="Right" BorderBrush="{Binding speaker.font.BrushColor}">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="BorderThickness" Value="4"></Setter>
                                                <Setter Property="CornerRadius" Value="15,15,15,0"></Setter>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding speaker.id}" Value="-2">
                                                        <Setter Property="BorderThickness" Value="0"></Setter>
                                                        <Setter Property="CornerRadius" Value="0,0,0,0"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <TextBlock Text="{Binding line, Mode=OneWay}" 
                                               TextWrapping="Wrap" Padding="10" MinHeight="20" VerticalAlignment="Center"
                                               FontFamily="{Binding speaker.font.Family}" 
                                               FontSize="{Binding speaker.font.Size}" Foreground="{Binding speaker.font.BrushColor}">
                                        </TextBlock>
                                    </Border>
                                </Grid>
                            </ContentControl>
                        </DataTemplate>
                    </ListBox.ItemTemplate>

                </ListBox>
            </ScrollViewer>

            <ScrollViewer  BorderBrush="#3B4A51"  BorderThickness="3" Grid.Column="2">
                <i:Interaction.Behaviors>
                    <behaviors:AutoScrollBehavior />
                </i:Interaction.Behaviors>
                
                <TextBox x:Name="txtDocument" Grid.Row="0"
                         Text="{Binding Project.text}" TextWrapping="Wrap" AcceptsReturn="True" 
                         Background="{Binding AppOption.PlainEditor_Font_BackGroundHex}"
                         Foreground="{Binding AppOption.PlainEditor_Font_ForeGroundHex}"
                         FontSize="{Binding AppOption.PlainEditor_Font_Size}"
                         FontFamily="{Binding AppOption.PlainEditor_FontFamily}">
                    </TextBox>
            </ScrollViewer>
            
            <Grid Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="4*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="3*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <ComboBox x:Name="PersonListComboBox" ItemsSource="{Binding Project.people, Mode=TwoWay}" 
                          SelectedValue="{Binding AppContext.SelectedPerson, Mode=TwoWay}" DisplayMemberPath="name" 
                          Grid.Row="0" Grid.Column="0" />
                <ComboBox x:Name="ParenListComboBox" ItemsSource="{Binding Project.parens, Mode=TwoWay}" 
                          SelectedValue="{Binding AppContext.SelectedParen, Mode=TwoWay}" DisplayMemberPath="startend" 
                          Grid.Row="0" Grid.Column="1" />
                

                <ComboBox SelectedIndex="{Binding AppContext.EditorMode, Mode=TwoWay}" Grid.Row="0" Grid.Column="2">
                    <ComboBoxItem Content="挿入" Selector.IsSelected="True"></ComboBoxItem>
                    <ComboBoxItem Content="修正"></ComboBoxItem>
                    <ComboBoxItem Content="割り込み"></ComboBoxItem>
                </ComboBox>

                <TextBox AcceptsReturn="True" TextWrapping="Wrap" VerticalScrollBarVisibility="Auto" 
                         Text="{Binding AppContext.InputText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                         x:Name="InputTextBox" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"/>

                <Button x:Name="button" Content="完了"  Command="{Binding TypeLineCom}" 
                        Grid.Row="1" Grid.Column="2" Grid.RowSpan="2" Height="Auto" 
                        />
            </Grid>
        </Grid>
    </DockPanel>
</Controls:MetroWindow>
